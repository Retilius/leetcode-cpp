<?xml version="1.0" encoding="UTF-8"?>
<testsuites tests="13" failures="0" disabled="0" errors="0" timestamp="2025-09-01T02:23:55" time="0.002" name="AllTests">
  <testsuite name="TestCaseName" tests="1" failures="0" disabled="0" errors="0" time="0">
    <testcase name="TestName" status="run" time="0" classname="TestCaseName" />
  </testsuite>
  <testsuite name="DiagonalOrder/Sudoku" tests="2" failures="0" disabled="0" errors="0" time="0">
    <testcase name="DiagonalOrder/0" value_param="({ { &apos;5&apos; (53, 0x35), &apos;3&apos; (51, 0x33), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;7&apos; (55, 0x37), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E) }, { &apos;6&apos; (54, 0x36), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;1&apos; (49, 0x31), &apos;9&apos; (57, 0x39), &apos;5&apos; (53, 0x35), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E) }, { &apos;.&apos; (46, 0x2E), &apos;9&apos; (57, 0x39), &apos;8&apos; (56, 0x38), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;6&apos; (54, 0x36), &apos;.&apos; (46, 0x2E) }, { &apos;8&apos; (56, 0x38), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;6&apos; (54, 0x36), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;3&apos; (51, 0x33) }, { &apos;4&apos; (52, 0x34), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;8&apos; (56, 0x38), &apos;.&apos; (46, 0x2E), &apos;3&apos; (51, 0x33), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;1&apos; (49, 0x31) }, { &apos;7&apos; (55, 0x37), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;2&apos; (50, 0x32), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;6&apos; (54, 0x36) }, { &apos;.&apos; (46, 0x2E), &apos;6&apos; (54, 0x36), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;2&apos; (50, 0x32), &apos;8&apos; (56, 0x38), &apos;.&apos; (46, 0x2E) }, { &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;4&apos; (52, 0x34), &apos;1&apos; (49, 0x31), &apos;9&apos; (57, 0x39), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;5&apos; (53, 0x35) }, { &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;8&apos; (56, 0x38), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;7&apos; (55, 0x37), &apos;9&apos; (57, 0x39) } }, true)" status="run" time="0" classname="DiagonalOrder/Sudoku" />
    <testcase name="DiagonalOrder/1" value_param="({ { &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;4&apos; (52, 0x34), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;6&apos; (54, 0x36), &apos;3&apos; (51, 0x33), &apos;.&apos; (46, 0x2E) }, { &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E) }, { &apos;5&apos; (53, 0x35), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;9&apos; (57, 0x39), &apos;.&apos; (46, 0x2E) }, { &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;5&apos; (53, 0x35), &apos;6&apos; (54, 0x36), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E) }, { &apos;4&apos; (52, 0x34), &apos;.&apos; (46, 0x2E), &apos;3&apos; (51, 0x33), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;1&apos; (49, 0x31) }, { &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;7&apos; (55, 0x37), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E) }, { &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;5&apos; (53, 0x35), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E) }, { &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E) }, { &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E), &apos;.&apos; (46, 0x2E) } }, false)" status="run" time="0" classname="DiagonalOrder/Sudoku" />
  </testsuite>
  <testsuite name="DiagonalOrder/DiagonalOrderTest" tests="10" failures="0" disabled="0" errors="0" time="0.001">
    <testcase name="DiagonalOrder/0" value_param="({ { 1, 2, 3 }, { 4, 5, 6 }, { 7, 8, 9 } }, { 1, 2, 4, 7, 5, 3, 6, 8, 9 })" status="run" time="0" classname="DiagonalOrder/DiagonalOrderTest" />
    <testcase name="DiagonalOrder/1" value_param="({ { 1, 2 }, { 3, 4 } }, { 1, 2, 3, 4 })" status="run" time="0" classname="DiagonalOrder/DiagonalOrderTest" />
    <testcase name="DiagonalOrder/2" value_param="({ { 42 } }, { 42 })" status="run" time="0" classname="DiagonalOrder/DiagonalOrderTest" />
    <testcase name="DiagonalOrder/3" value_param="({ { 1, 2, 3, 4 } }, { 1, 2, 3, 4 })" status="run" time="0" classname="DiagonalOrder/DiagonalOrderTest" />
    <testcase name="DiagonalOrder/4" value_param="({ { 1 }, { 2 }, { 3 }, { 4 } }, { 1, 2, 3, 4 })" status="run" time="0" classname="DiagonalOrder/DiagonalOrderTest" />
    <testcase name="DiagonalOrder/5" value_param="({}, {})" status="run" time="0" classname="DiagonalOrder/DiagonalOrderTest" />
    <testcase name="DiagonalOrder/6" value_param="({ { 1, 2 }, { 3, 4 }, { 5, 6 } }, { 1, 2, 3, 5, 4, 6 })" status="run" time="0" classname="DiagonalOrder/DiagonalOrderTest" />
    <testcase name="DiagonalOrder/7" value_param="({ { 1, 2, 3, 4 }, { 5, 6, 7, 8 } }, { 1, 2, 5, 6, 3, 4, 7, 8 })" status="run" time="0" classname="DiagonalOrder/DiagonalOrderTest" />
    <testcase name="DiagonalOrder/8" value_param="({ { -1, -2 }, { -3, -4 } }, { -1, -2, -3, -4 })" status="run" time="0" classname="DiagonalOrder/DiagonalOrderTest" />
    <testcase name="DiagonalOrder/9" value_param="({ { 1, 2, 3, 4 }, { 5, 6, 7, 8 }, { 9, 10, 11, 12 } }, { 1, 2, 5, 9, 6, 3, 4, 7, 10, 11, 8, 12 })" status="run" time="0" classname="DiagonalOrder/DiagonalOrderTest" />
  </testsuite>
</testsuites>
